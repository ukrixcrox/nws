#!/usr/bin/python3
import re
import newspaper
from newspaper import Article
import pyfiglet
import nltk
from rich import print
from rich.padding import Padding
from rich.console import Console
from rich.markdown import Markdown

#define object console
console = Console()

#download punkt with nltk
nltk.download('punkt')

banner = pyfiglet.figlet_format("News scraper")
print(banner)

#prints examples of newswebsites
print("Examples: ")
print()
ex = newspaper.popular_urls()
print(*ex, sep="    ")
print('\n')


#creates a newspaper from a newswebsite and prints the article url's in the newswebsite out
try:
    i2 = input("Enter news website=> ")

    news = newspaper.build(i2, memoize_articles=False)

    for article in news.articles:
        article_url = Padding(article.url, (1, 5), expand=False)
        print(article_url)


except KeyboardInterrupt:
    print()
    print("[red]==> User KeyboardInterrupt[/red]")
    exit(0)

except:
    pattern = r'^http[,s]://.$'
    a = re.match(pattern, i2)
    i2 != a
    print()
    print("[red]==> Error: This is not an url[/red]")
    exit(0)


#Takes a news article url as input and displays information see below
try:
    i = input("Enter news article url=> ")

    url = i

    article=Article(url)

    article.download()
    article.parse()
    article.nlp()

except KeyboardInterrupt:
    print()
    print("[red]==> User KeyboardInterrupt[/red]")
    exit(0)
#checks for a valid url per pattern
except:
    pattern = r'^http[,s]://.$'
    a = re.match(pattern, i)
    i != a
    print()
    print("[red]==> Error: This is not an url[/red]")
    exit(0)

width= 100
#the article title
a = article.title
print()
article_title_markdown= Markdown("# Title")
console.print(article_title_markdown)
print()
article_title = Padding(a, (0, 4), expand=False)
print(article_title)
print()

#prints the articles authors
#a1 = article.authors

#print()
#print(Fore.LIGHTCYAN_EX+" Author ".center(width,'-'))
#print()
#article_authors = Padding(a1, (0, 4), expand=False)
#print(article_authors)


#prints the articles publish date except if there is none
a2 = article.publish_date

if a2 != None:
    print()
    article_publishdate_markdown=Markdown("# Publishdate")
    console.print(article_publishdate_markdown)
    print()
    print("    ",a2)
    print()
else:
    pass

#prints an article summary
a3 = article.summary
article_summary_markdown=Markdown("# Article-Summary")
console.print(article_summary_markdown)
print()
article_summary=Padding(a3, (0,4), expand=False)
print(article_summary)
print()

#the full article text
a4 = article.text

article_text_markdown=Markdown("# Text")
console.print(article_text_markdown)
print()
article_text = Padding(a4, (0, 4), expand=False)
print(article_text)
print()
